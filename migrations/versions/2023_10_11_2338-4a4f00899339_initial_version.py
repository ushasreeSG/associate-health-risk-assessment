"""initial_version

Revision ID: 4a4f00899339
Revises: 
Create Date: 2023-10-11 23:38:03.263793

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4a4f00899339'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('questions',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('question', sa.String(length=512), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('question'),
    schema='application'
    )
    op.create_index(op.f('ix_application_questions_id'), 'questions', ['id'], unique=False, schema='application')
    op.create_table('users',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    schema='application'
    )
    op.create_index(op.f('ix_application_users_id'), 'users', ['id'], unique=False, schema='application')
    op.create_table('combinations',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('combination_id', sa.Integer(), nullable=False),
    sa.Column('question_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('combination_flag', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['application.questions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='application'
    )
    op.create_index(op.f('ix_application_combinations_id'), 'combinations', ['id'], unique=False, schema='application')
    op.create_table('user_response',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.String(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('updated_by', sa.String(), nullable=True),
    sa.Column('user_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('question_id', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('response_flag', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['application.questions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['application.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='application'
    )
    op.create_index(op.f('ix_application_user_response_id'), 'user_response', ['id'], unique=False, schema='application')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_application_user_response_id'), table_name='user_response', schema='application')
    op.drop_table('user_response', schema='application')
    op.drop_index(op.f('ix_application_combinations_id'), table_name='combinations', schema='application')
    op.drop_table('combinations', schema='application')
    op.drop_index(op.f('ix_application_users_id'), table_name='users', schema='application')
    op.drop_table('users', schema='application')
    op.drop_index(op.f('ix_application_questions_id'), table_name='questions', schema='application')
    op.drop_table('questions', schema='application')
    # ### end Alembic commands ###
